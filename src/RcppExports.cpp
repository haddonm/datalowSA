// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// makebiomC
NumericMatrix makebiomC(NumericVector intheta, NumericVector bd, NumericVector ct);
RcppExport SEXP _datalowSA_makebiomC(SEXP inthetaSEXP, SEXP bdSEXP, SEXP ctSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type intheta(inthetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type bd(bdSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ct(ctSEXP);
    rcpp_result_gen = Rcpp::wrap(makebiomC(intheta, bd, ct));
    return rcpp_result_gen;
END_RCPP
}
// fishNAAC
List fishNAAC(int nyr, int maxa, double hS, double hrate, NumericVector glob, NumericVector maa, NumericVector waa, NumericVector sela, NumericMatrix Nt);
RcppExport SEXP _datalowSA_fishNAAC(SEXP nyrSEXP, SEXP maxaSEXP, SEXP hSSEXP, SEXP hrateSEXP, SEXP globSEXP, SEXP maaSEXP, SEXP waaSEXP, SEXP selaSEXP, SEXP NtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nyr(nyrSEXP);
    Rcpp::traits::input_parameter< int >::type maxa(maxaSEXP);
    Rcpp::traits::input_parameter< double >::type hS(hSSEXP);
    Rcpp::traits::input_parameter< double >::type hrate(hrateSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type glob(globSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type maa(maaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type waa(waaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sela(selaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Nt(NtSEXP);
    rcpp_result_gen = Rcpp::wrap(fishNAAC(nyr, maxa, hS, hrate, glob, maa, waa, sela, Nt));
    return rcpp_result_gen;
END_RCPP
}
// bhC
double bhC(double SPB, double steep, double R0, double B0);
RcppExport SEXP _datalowSA_bhC(SEXP SPBSEXP, SEXP steepSEXP, SEXP R0SEXP, SEXP B0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type SPB(SPBSEXP);
    Rcpp::traits::input_parameter< double >::type steep(steepSEXP);
    Rcpp::traits::input_parameter< double >::type R0(R0SEXP);
    Rcpp::traits::input_parameter< double >::type B0(B0SEXP);
    rcpp_result_gen = Rcpp::wrap(bhC(SPB, steep, R0, B0));
    return rcpp_result_gen;
END_RCPP
}
// SpBC
double SpBC(NumericVector Nt, NumericVector MatA, NumericVector WghtA);
RcppExport SEXP _datalowSA_SpBC(SEXP NtSEXP, SEXP MatASEXP, SEXP WghtASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Nt(NtSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type MatA(MatASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type WghtA(WghtASEXP);
    rcpp_result_gen = Rcpp::wrap(SpBC(Nt, MatA, WghtA));
    return rcpp_result_gen;
END_RCPP
}
// ExBC
double ExBC(NumericVector Nt, NumericVector Sel, NumericVector WghtA);
RcppExport SEXP _datalowSA_ExBC(SEXP NtSEXP, SEXP SelSEXP, SEXP WghtASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Nt(NtSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Sel(SelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type WghtA(WghtASEXP);
    rcpp_result_gen = Rcpp::wrap(ExBC(Nt, Sel, WghtA));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_datalowSA_makebiomC", (DL_FUNC) &_datalowSA_makebiomC, 3},
    {"_datalowSA_fishNAAC", (DL_FUNC) &_datalowSA_fishNAAC, 9},
    {"_datalowSA_bhC", (DL_FUNC) &_datalowSA_bhC, 4},
    {"_datalowSA_SpBC", (DL_FUNC) &_datalowSA_SpBC, 3},
    {"_datalowSA_ExBC", (DL_FUNC) &_datalowSA_ExBC, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_datalowSA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
